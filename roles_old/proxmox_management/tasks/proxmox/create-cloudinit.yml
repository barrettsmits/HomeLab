---

- find:
    paths: "{{img_target_path}}"
    pattern: "{{ img_target_name }}.img"
    age: -7d
  register: file_data

- name: Refresh {{ img_target_name }} if older than 7 days
  block:
    - name: Download cloud image
      ansible.builtin.get_url:
        url: "{{ img_source_url }}"
        dest: "{{ img_download_target_path }}"
        mode: 0777
      delegate_to: 127.0.0.1

    - name: Virt-customize the image
      ansible.builtin.shell: |
        pwd
        cd {{ img_download_target_path }}
        virt-customize -a {{ img_target_name }}.img --install qemu-guest-agent, python3-pip
        virt-customize -a {{ img_target_name }}.img --run-command 'systemctl enable qemu-guest-agent'
        virt-customize -a {{ img_target_name }}.img --run-command 'systemctl stop qemu-guest-agent'
      delegate_to: 127.0.0.1

    - name: Copy downloaded image to proxmox
      ansible.builtin.copy:
        src: "{{ img_download_target_path }}/{{ img_target_name }}.img"
        dest: "{{img_target_path}}/{{ img_target_name }}.img"
      delegate_to: 127.0.0.1
  when: not file_data.files | length > 0 or force_download

- name: Replace cloud base image.
  block:
    - name: Remove existing cloud image
      community.general.proxmox_kvm:
        api_host: "{{ api_host }}"
        api_user: "{{ api_user }}"
        api_token_id: "{{ vault_api_token_id}}"
        api_token_secret: "{{ vault_api_token_secret }}"
        vmid: 9999
        state: absent

    # Ansible Community General proxmox_kvm didn't do everything I needed. 
    - name: Step-by-step VM creation with qm commands
      ansible.builtin.shell: |
        qm create 9999 --memory 2048 --net0 virtio,bridge=vmbr0
        qm importdisk 9999 {{ img_target_name }}.img {{ storage_target }}
        qm set 9999 --scsihw virtio-scsi-pci --scsi0 {{ storage_target }}:vm-9999-disk-0
        qm set 9999 --ide2 {{ storage_target }}:cloudinit
        qm set 9999 --boot c --bootdisk scsi0
        qm set 9999 --serial0 socket --vga serial0

    - name: Add Name, User ID, Password,and agent to new VM
      community.general.proxmox_kvm:
        api_host: "{{ api_host }}"
        api_user: "{{ api_user }}"
        api_token_id: "{{ vault_api_token_id }}"
        api_token_secret: "{{ vault_api_token_secret }}"
        name: "CloudInitBase"
        vmid: 9999
        node: "{{ node_target }}"
        agent: "enabled=1,fstrim_cloned_disks=1"
        citype: nocloud
        ciuser: "ansibleadmin"
        cipassword: "{{ proxmox_ci_password }}"
        update: true

    - name: Set SSH keys
      community.general.proxmox_kvm:
        api_host: "{{ api_host }}"
        api_user: "{{ api_user }}"
        api_token_id: "{{ vault_api_token_id }}"
        api_token_secret: "{{ vault_api_token_secret }}"
        node: "{{ node_target }}"
        vmid: 9999
        sshkeys: "{{ public_keys }}"
        update: true

    - name: Grow existing disk
      community.general.proxmox_disk:
        api_host: "{{ api_host }}"
        api_user: "{{ api_user }}"
        api_token_id: "{{ vault_api_token_id }}"
        api_token_secret: "{{ vault_api_token_secret }}"
        name: "CloudInitBase"
        vmid: 9999
        disk: scsi0
        storage: local-lvm
        size: 10G
        state: resized

    - name: Convert to template
      ansible.builtin.shell:
        cmd: "qm template 9999"
