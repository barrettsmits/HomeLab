---
# tasks file for cloud_init

- find:
    paths: "{{ var_img_target_path}}/"
    pattern: "{{ var_img_target_name }}.img"
    age: -7d
  register: file_data

- name: Refresh {{ var_img_target_name }} if older than 7 days
  block:
    - name: Download cloud image
      ansible.builtin.get_url:
        url: "{{ var_img_source_url }}"
        dest: "{{ var_img_download_target_path }}"
        mode: 0777
      delegate_to: 127.0.0.1

    - name: Virt-customize the image
      ansible.builtin.shell: |
        cd {{ var_img_download_target_path }}
        virt-customize -a {{ var_img_target_name }}.img --install qemu-guest-agent
        virt-customize -a {{ var_img_target_name }}.img --install python3
        virt-customize -a {{ var_img_target_name }}.img --run-command 'systemctl enable qemu-guest-agent'
        virt-customize -a {{ var_img_target_name }}.img --run-command 'systemctl stop qemu-guest-agent'
      delegate_to: 127.0.0.1

    - name: Copy downloaded image to proxmox
      ansible.builtin.copy:
        src: "{{ var_img_download_target_path }}/{{ var_img_target_name }}.img"
        dest: "{{ var_img_target_path}}/{{ var_img_target_name }}.img"
        force: true
  when: not file_data.files | length > 0 or var_force_download

- name: Replace cloud base image.
  block:
    - name: Remove existing cloud image
      community.general.proxmox_kvm:
        api_host: "{{ var_api_host }}"
        api_user: "{{ var_api_user }}"
        api_token_id: "{{ var_api_token_id}}"
        api_token_secret: "{{ var_api_token_secret }}"
        vmid: "{{ var_template_vmid }}"
        state: absent

    # Ansible Community General proxmox_kvm didn't do everything I needed.
    - name: qm create and import disk
      ansible.builtin.shell: |
        cd /tmp/
        qm create {{ var_template_vmid }} --memory 2048 --net0 virtio,bridge=vmbr0
        qm importdisk {{ var_template_vmid }} {{ var_img_target_name }}.img {{ var_storage_target }}
    
    - name: 3 second pause
      pause:
        seconds: 3

    - name: Step-by-step VM creation with qm commands
      ansible.builtin.shell: |
        qm set {{ var_template_vmid }} --scsihw virtio-scsi-pci --scsi0 {{ var_storage_target }}:vm-{{ var_template_vmid }}-disk-0
        qm set {{ var_template_vmid }} --ide2 {{ var_storage_target }}:cloudinit
        qm set {{ var_template_vmid }} --scsi0 size={{ var_disksize }}
        qm set {{ var_template_vmid }} --boot c --bootdisk scsi0
        qm set {{ var_template_vmid }} --serial0 socket --vga serial0
    
    - name: 3 second pause
      pause:
        seconds: 3

    - name: Add Name, User ID, Password,and agent to new VM
      community.general.proxmox_kvm:
        api_host: "{{ var_api_host }}"
        api_user: "{{ var_api_user }}"
        api_token_id: "{{ var_api_token_id }}"
        api_token_secret: "{{ var_api_token_secret }}"
        name: "CloudInitBase"
        vmid: "{{ var_template_vmid }}"
        node: "{{ var_node_target }}"
        agent: "enabled=1,fstrim_cloned_disks=1"
        citype: "nocloud"
        ciuser: "ansibleadmin"
        cipassword: "{{ proxmox_ci_password }}"
        update: true
    
    - name: 3 second pause
      pause:
        seconds: 3

    - name: Set SSH keys
      community.general.proxmox_kvm:
        api_host: "{{ var_api_host }}"
        api_user: "{{ var_api_user }}"
        api_token_id: "{{ var_api_token_id }}"
        api_token_secret: "{{ var_api_token_secret }}"
        node: "{{ var_node_target }}"
        vmid: "{{ var_template_vmid }}"
        sshkeys: "{{ var_public_keys }}"
        update: true

    # - name: Convert to template
    #   ansible.builtin.shell:
    #     cmd: "qm template {{ var_template_vmid }}"

    - name: Wait for server to update
      wait_for:
        timeout: 30
    
