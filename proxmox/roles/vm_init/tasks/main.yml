---
- name: Clone vm from golden-image template
  community.general.proxmox_kvm:
    api_host: >
      "{{ item['api_host'] if item.get('api_host')
      else ( vm_init_defaults['api_host'] if vm_init_defaults['api_host'] else omit ) }}"
    # api_password: >
    #   "{{ item['api_password'] if item.get('api_password')
    #   else ( vm_init_defaults['api_password'] if vm_init_defaults['api_password'] else omit ) }}"
    api_user: >
      "{{ item['api_user'] if item.get('api_user')
      else ( vm_init_defaults['api_user'] if vm_init_defaults['api_user'] else omit ) }}"
    api_token_secret: >
      "{{ item['api_token_secret'] if item.get('api_token_secret')
      else ( vm_init_defaults['api_token_secret'] if vm_init_defaults['api_token_secret'] else omit ) }}"
    api_token_id: >
      "{{ item['api_token_id'] if item.get('api_token_id')
      else ( vm_init_defaults['api_token_id'] if vm_init_defaults['api_token_id'] else omit ) }}"
    clone: "{{ item['clone'] if item.get('clone') else ( vm_init_defaults['clone'] if vm_init_defaults['clone'] else omit ) }}"
    name: "{{ item['name'] if item.get('name') else ( vm_init_defaults['name'] if vm_init_defaults['name'] else omit ) }}"
    node: "{{ item['node'] if item.get('node') else ( vm_init_defaults['node'] if vm_init_defaults['node'] else omit ) }}"
    newid: "{{ item['newid'] if item.get('newid') else ( vm_init_defaults['newid'] if vm_init_defaults['newid'] else omit ) }}"
    timeout: "{{ item['timeout'] if item.get('timeout') else ( vm_init_defaults['timeout'] if vm_init_defaults['timeout'] else omit ) }}"
  with_items: "{{ vm_init_list | default([]) }}"
  notify: pause 30

- name: Update settings of VM
  community.general.proxmox_kvm:
    acpi: "{{ item['acpi'] if item.get('acpi') else vm_init_defaults['acpi'] }}"
    agent: "{{ item['agent'] if item.get('agent') else ( vm_init_defaults['agent'] if vm_init_defaults['agent'] else omit ) }}"
    api_host: >
      "{{ item['api_host'] if item.get('api_host')
      else ( vm_init_defaults['api_host'] if vm_init_defaults['api_host'] else omit ) }}"
    # api_password: >
    #   "{{ item['api_password'] if item.get('api_password')
    #   else ( vm_init_defaults['api_password'] if vm_init_defaults['api_password'] else omit ) }}"
    api_user: >
      "{{ item['api_user'] if item.get('api_user')
      else ( vm_init_defaults['api_user'] if vm_init_defaults['api_user'] else omit ) }}"
    api_token_secret: >
      "{{ item['api_token_secret'] if item.get('api_token_secret')
      else ( vm_init_defaults['api_token_secret'] if vm_init_defaults['api_token_secret'] else omit ) }}"
    api_token_id: >
      "{{ item['api_token_id'] if item.get('api_token_id')
      else ( vm_init_defaults['api_token_id'] if vm_init_defaults['api_token_id'] else omit ) }}"
    # args: "{{ item['args'] if item.get('args') else ( vm_init_defaults['args'] if vm_init_defaults['args'] else omit ) }}"
    autostart: "{{ item['autostart'] if item.get('autostart') else vm_init_defaults['autostart'] }}"
    balloon: "{{ item['balloon'] if item.get('balloon') else vm_init_defaults['balloon'] }}"
    bios: "{{ item['bios'] if item.get('bios') else ( vm_init_defaults['bios'] if vm_init_defaults['bios'] else omit ) }}"
    boot: "{{ item['boot'] if item.get('boot') else vm_init_defaults['boot'] }}"
    bootdisk: "{{ item['bootdisk'] if item.get('bootdisk') else ( vm_init_defaults['bootdisk'] if vm_init_defaults['bootdisk'] else omit ) }}"
    cores: "{{ item['cores'] if item.get('cores') else vm_init_defaults['cores'] }}"
    cpu: "{{ item['cpu'] if item.get('cpu') else vm_init_defaults['cpu'] }}"
    cpulimit: "{{ item['cpulimit'] if item.get('cpulimit') else ( vm_init_defaults['cpulimit'] if vm_init_defaults['cpulimit'] else omit ) }}"
    cpuunits: "{{ item['cpuunits'] if item.get('cpuunits') else vm_init_defaults['cpuunits'] }}"
    delete: "{{ item['delete'] if item.get('delete') else ( vm_init_defaults['delete'] if vm_init_defaults['delete'] else omit ) }}"
    description: >
      "{{ item['description'] if item.get('description')
      else ( vm_init_defaults['description'] if vm_init_defaults['description'] else omit ) }}"
    digest: "{{ item['digest'] if item.get('digest') else ( vm_init_defaults['digest'] if vm_init_defaults['digest'] else omit ) }}"
    # force: "{{ item['force'] if item.get('force') else vm_init_defaults['force'] }}"
    force: "{{ item['force'] if item.get('force') else ( vm_init_defaults['force'] if vm_init_defaults['force'] else omit ) }}"
    format: "{{ item['format'] if item.get('format') else vm_init_defaults['format'] }}"
    freeze: "{{ item['freeze'] if item.get('freeze') else ( vm_init_defaults['freeze'] if vm_init_defaults['freeze'] else omit ) }}"
    full: "{{ item['full'] if item.get('full') else ( vm_init_defaults['full'] if vm_init_defaults['full'] else omit ) }}"
    hostpci: "{{ item['hostpci'] if item.get('hostpci') else ( vm_init_defaults['hostpci'] if vm_init_defaults['hostpci'] else omit ) }}"
    hotplug: "{{ item['hotplug'] if item.get('hotplug') else ( vm_init_defaults['hotplug'] if vm_init_defaults['hotplug'] else omit ) }}"
    hugepages: "{{ item['hugepages'] if item.get('hugepages') else ( vm_init_defaults['hugepages'] if vm_init_defaults['hugepages'] else omit ) }}"
    ide: "{{ item['ide'] if item.get('ide') else ( vm_init_defaults['ide'] if vm_init_defaults['ide'] else omit ) }}"
    keyboard: "{{ item['keyboard'] if item.get('keyboard') else ( vm_init_defaults['keyboard'] if vm_init_defaults['keyboard'] else omit ) }}"
    kvm: "{{ item['kvm'] if item.get('kvm') else vm_init_defaults['kvm'] }}"
    localtime: "{{ item['localtime'] if item.get('localtime') else ( vm_init_defaults['localtime'] if vm_init_defaults['localtime'] else omit ) }}"
    lock: "{{ item['lock'] if item.get('lock') else ( vm_init_defaults['lock'] if vm_init_defaults['lock'] else omit ) }}"
    machine: "{{ item['machine'] if item.get('machine') else ( vm_init_defaults['machine'] if vm_init_defaults['machine'] else omit ) }}"
    memory: "{{ item['memory'] if item.get('memory') else vm_init_defaults['memory'] }}"
    migrate_downtime: >
      "{{ item['migrate_downtime'] if item.get('migrate_downtime')
      else ( vm_init_defaults['migrate_downtime'] if vm_init_defaults['migrate_downtime'] else omit ) }}"
    migrate_speed: >
      "{{ item['migrate_speed'] if item.get('migrate_speed')
      else ( vm_init_defaults['migrate_speed'] if vm_init_defaults['migrate_speed'] else omit ) }}"
    name: "{{ item['name'] if item.get('name') else ( vm_init_defaults['name'] if vm_init_defaults['name'] else omit ) }}"
    net: "{{ item['net'] if item.get('net') else ( vm_init_defaults['net'] if vm_init_defaults['net'] else omit ) }}"
    newid: "{{ item['newid'] if item.get('newid') else ( vm_init_defaults['newid'] if vm_init_defaults['newid'] else omit ) }}"
    node: "{{ item['node'] if item.get('node') else ( vm_init_defaults['node'] if vm_init_defaults['node'] else omit ) }}"
    numa: "{{ item['numa'] if item.get('numa') else ( vm_init_defaults['numa'] if vm_init_defaults['numa'] else omit ) }}"
    numa_enabled: >
      "{{ item['numa_enabled'] if item.get('numa_enabled')
      else ( vm_init_defaults['numa_enabled'] if vm_init_defaults['numa_enabled'] else omit ) }}"
    onboot: "{{ item['onboot'] if item.get('onboot') else vm_init_defaults['onboot'] }}"
    ostype: "{{ item['ostype'] if item.get('ostype') else vm_init_defaults['ostype'] }}"
    parallel: >
      "{{ item['parallel'] if item.get('parallel')
      else ( vm_init_defaults['parallel'] if vm_init_defaults['parallel'] else omit ) }}"
    pool: "{{ item['pool'] if item.get('pool') else ( vm_init_defaults['pool'] if vm_init_defaults['pool'] else omit ) }}"
    protection: >
      "{{ item['protection'] if item.get('protection')
      else ( vm_init_defaults['protection'] if vm_init_defaults['protection'] else omit ) }}"
    reboot: "{{ item['reboot'] if item.get('reboot') else ( vm_init_defaults['reboot'] if vm_init_defaults['reboot'] else omit ) }}"
    revert: "{{ item['revert'] if item.get('revert') else ( vm_init_defaults['revert'] if vm_init_defaults['revert'] else omit ) }}"
    sata: "{{ item['sata'] if item.get('sata') else ( vm_init_defaults['sata'] if vm_init_defaults['sata'] else omit ) }}"
    scsi: "{{ item['scsi'] if item.get('scsi') else ( vm_init_defaults['scsi'] if vm_init_defaults['scsi'] else omit ) }}"
    scsihw: "{{ item['scsihw'] if item.get('scsihw') else ( vm_init_defaults['scsihw'] if vm_init_defaults['scsihw'] else omit ) }}"
    serial: "{{ item['serial'] if item.get('serial') else ( vm_init_defaults['serial'] if vm_init_defaults['serial'] else omit ) }}"
    shares: "{{ item['shares'] if item.get('shares') else ( vm_init_defaults['shares'] if vm_init_defaults['shares'] else omit ) }}"
    skiplock: "{{ item['skiplock'] if item.get('skiplock') else ( vm_init_defaults['skiplock'] if vm_init_defaults['skiplock'] else omit ) }}"
    smbios: "{{ item['smbios'] if item.get('smbios') else ( vm_init_defaults['smbios'] if vm_init_defaults['smbios'] else omit ) }}"
    snapname: "{{ item['snapname'] if item.get('snapname') else ( vm_init_defaults['snapname'] if vm_init_defaults['snapname'] else omit ) }}"
    sockets: "{{ item['sockets'] if item.get('sockets') else vm_init_defaults['sockets'] }}"
    startdate: "{{ item['startdate'] if item.get('startdate') else ( vm_init_defaults['startdate'] if vm_init_defaults['startdate'] else omit ) }}"
    startup: "{{ item['startup'] if item.get('startup') else ( vm_init_defaults['startup'] if vm_init_defaults['startup'] else omit ) }}"
    state: "{{ item['state'] if item.get('state') else ( vm_init_defaults['state'] if vm_init_defaults['state'] else omit ) }}"
    storage: "{{ item['storage'] if item.get('storage') else ( vm_init_defaults['storage'] if vm_init_defaults['storage'] else omit ) }}"
    tablet: "{{ item['tablet'] if item.get('tablet') else vm_init_defaults['tablet'] }}"
    target: "{{ item['target'] if item.get('target') else ( vm_init_defaults['target'] if vm_init_defaults['target'] else omit ) }}"
    tdf: "{{ item['tdf'] if item.get('tdf') else ( vm_init_defaults['tdf'] if vm_init_defaults['tdf'] else omit ) }}"
    template: "{{ item['template'] if item.get('template') else vm_init_defaults['template'] }}"
    timeout: "{{ item['timeout'] if item.get('timeout') else ( vm_init_defaults['timeout'] if vm_init_defaults['timeout'] else omit ) }}"
    update: "{{ item['update'] if item.get('update') else ( vm_init_defaults['update'] if vm_init_defaults['update'] else omit ) }}"
    validate_certs: >
      "{{ item['validate_certs'] if item.get('validate_certs')
      else ( vm_init_defaults['validate_certs'] if vm_init_defaults['validate_certs'] else omit ) }}"
    vcpus: "{{ item['vcpus'] if item.get('vcpus') else ( vm_init_defaults['vcpus'] if vm_init_defaults['vcpus'] else omit ) }}"
    vga: "{{ item['vga'] if item.get('vga') else vm_init_defaults['vga'] }}"
    virtio: "{{ item['virtio'] if item.get('virtio') else ( vm_init_defaults['virtio'] if vm_init_defaults['virtio'] else omit ) }}"
    vmid: "{{ item['newid'] if item.get('newid') else omit }}"
    watchdog: "{{ item['watchdog'] if item.get('watchdog') else ( vm_init_defaults['watchdog'] if vm_init_defaults['watchdog'] else omit ) }}"
  with_items: "{{ vm_init_list | default([]) }}"

- name: Removing NIC net0 targeting the vm by id
  community.general.proxmox_nic:
    api_host: >
      "{{ item['api_host'] if item.get('api_host')
      else ( vm_init_defaults['api_host'] if vm_init_defaults['api_host'] else omit ) }}"
    # api_password: >
    #   "{{ item['api_password'] if item.get('api_password')
    #   else ( vm_init_defaults['api_password'] if vm_init_defaults['api_password'] else omit ) }}"
    api_user: >
      "{{ item['api_user'] if item.get('api_user')
      else ( vm_init_defaults['api_user'] if vm_init_defaults['api_user'] else omit ) }}"
    api_token_secret: >
      "{{ item['api_token_secret'] if item.get('api_token_secret')
      else ( vm_init_defaults['api_token_secret'] if vm_init_defaults['api_token_secret'] else omit ) }}"
    api_token_id: >
      "{{ item['api_token_id'] if item.get('api_token_id')
      else ( vm_init_defaults['api_token_id'] if vm_init_defaults['api_token_id'] else omit ) }}"
    vmid: "{{ item['newid'] if item.get('newid') else omit }}"
    interface: net0
    state: absent
  with_items: "{{ vm_init_list | default([]) }}"

- name: Create NIC net0 targeting the vm by id
  community.general.proxmox_nic:
    api_host: >
      "{{ item['api_host'] if item.get('api_host')
      else ( vm_init_defaults['api_host'] if vm_init_defaults['api_host'] else omit ) }}"
    # api_password: >
    #   "{{ item['api_password'] if item.get('api_password')
    #   else ( vm_init_defaults['api_password'] if vm_init_defaults['api_password'] else omit ) }}"
    api_user: >
      "{{ item['api_user'] if item.get('api_user')
      else ( vm_init_defaults['api_user'] if vm_init_defaults['api_user'] else omit ) }}"
    api_token_secret: >
      "{{ item['api_token_secret'] if item.get('api_token_secret')
      else ( vm_init_defaults['api_token_secret'] if vm_init_defaults['api_token_secret'] else omit ) }}"
    api_token_id: >
      "{{ item['api_token_id'] if item.get('api_token_id')
      else ( vm_init_defaults['api_token_id'] if vm_init_defaults['api_token_id'] else omit ) }}"
    vmid: "{{ item['newid'] if item.get('newid') else omit }}"
    interface: net0
    bridge: vmbr0
    mac: "{{ item['nic']['mac'] | default(omit) }}"
    firewall: false
  with_items: "{{ vm_init_list | default([]) }}"
  notify: pause 30

- name: Flush handlers
  meta: flush_handlers

- name: Start the VM
  community.general.proxmox_kvm:
    api_host: >
      "{{ item['api_host'] if item.get('api_host')
      else ( vm_init_defaults['api_host'] if vm_init_defaults['api_host'] else omit ) }}"
    # api_password: >-
    #   "{{ item['api_password'] if item.get('api_password')
    #   else ( vm_init_defaults['api_password'] if vm_init_defaults['api_password'] else omit ) }}"
    api_user: "{{ item['api_user'] if item.get('api_user') else ( vm_init_defaults['api_user'] if vm_init_defaults['api_user'] else omit ) }}"
    api_token_secret: >
      "{{ item['api_token_secret'] if item.get('api_token_secret')
      else ( vm_init_defaults['api_token_secret'] if vm_init_defaults['api_token_secret'] else omit ) }}"
    api_token_id: >
      "{{ item['api_token_id'] if item.get('api_token_id')
      else ( vm_init_defaults['api_token_id'] if vm_init_defaults['api_token_id'] else omit ) }}"
    vmid: "{{ item['newid'] if item.get('newid') else ( vm_init_defaults['newid'] if vm_init_defaults['newid'] else omit ) }}"
    state: started
  with_items: "{{ vm_init_list | default([]) }}"
  register: result
  notify: pause 30
